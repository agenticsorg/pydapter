name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for proper versioning

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install uv and create virtual environment
        run: |
          uv pip install uv

      - name: Create virtual environment
        run: |
          uv venv .venv
          echo "VIRTUAL_ENV=$GITHUB_WORKSPACE/.venv" >> $GITHUB_ENV
          echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          pip install uv
          uv sync --extra all

      - name: Run CI script
        run: |
          uv run scripts/ci.py --python-version ${{ matrix.python-version }}

      - name: Run linting and formatting checks
        run: |
          uv run scripts/ci.py --skip-unit --skip-integration --skip-type-check --skip-coverage

      - name: Run type checking
        run: |
          uv run scripts/ci.py --skip-unit --skip-integration --skip-lint --skip-coverage

      - name: Run type checking
        run: |
          uv run scripts/ci.py --skip-unit --skip-integration --skip-lint
          --skip-coverage

      - name: Run integration tests
        run: |
          uv run scripts/ci.py --skip-unit --skip-lint --skip-type-check --skip-coverage

      - name: Run tests with coverage
        run: |
          python scripts/ci.py --parallel 2

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install -e ".[dev]"

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     file: ./coverage.xml
      #     fail_ci_if_error: true
